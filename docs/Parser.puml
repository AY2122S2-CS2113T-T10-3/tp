@startuml
abstract class Parser {
    commandFormat: String
    groupNames: HashSet<String>
    parsedCommand: HashMap<String, String>
    --
    + parseString(String str): HashMap<String, String>
}

class XYZParser {
    + parseCommand(String userInp): Command
}

Parser <|-- XYZParser

enum CommandWord {
  ADD
  LIST
  DEL
  EXIT
  ...
}
CommandWord <..XYZParser
class ModHappyParser {
    - getCommandParser(String commandWord): Parser
    + parseCommand(String userInp): Command
}
Parser <|-- ModHappyParser
XYZParser <.. ModHappyParser: uses
ModHappyParser --* Main
abstract class Command {
}

Command <.. ModHappyParser: returns
Main <.. Command
TextUi --* Main
@enduml